---
# tasks file for Rust

- name: install | Get rust_user home
  become: true
  ansible.builtin.getent:
    database: passwd
    key: '{{ rust_user }}'
    split: ':'

- name: install | Define rust user home
  ansible.builtin.set_fact:
    rust_user_home: '{{ getent_passwd[rust_user][4] }}'
    rust_exe: '{{ getent_passwd[rust_user][4] }}/{{ rust_cargo_home_suffix }}/bin/rustup'

- name: install | Create temporary install directory
  become: true
  become_user: '{{ rust_user }}'
  ansible.builtin.tempfile:
    path: '{{ rust_user_home }}'
    state: directory
    suffix: .install
  register: temp_install_dir
  changed_when: false

- name: install | Install packages
  become: true
  ansible.builtin.dnf:
    name: '{{ item }}'
    state: present
  loop: '{{ packages.redhat }}'

- name: install | Install RustUp
  become: true
  become_user: '{{ rust_user }}'
  ansible.builtin.shell: |
    set -o pipefail
    curl https://sh.rustup.rs -sSf | sh -s -- -y
  args:
    creates: '{{ rust_user_home }}/{{ rust_cargo_home_suffix }}/bin/rustup'
    executable: /bin/bash
  environment:
    TMPDIR: '{{ temp_install_dir.path }}'
    RUSTUP_HOME: '{{ rust_user_home }}/{{ rust_home_suffix }}'
    CARGO_HOME: '{{ rust_user_home }}/{{ rust_cargo_home_suffix }}'

- name: install | Ensure .local/bin exists
  become: true
  ansible.builtin.file:
    path: /home/{{ rust_user }}/.local/bin
    state: directory
    owner: '{{ rust_user }}'
    group: '{{ rust_user }}'
    mode: 0755

- name: install | Download Rust-analyzer '{{ rust_analyzer_version }}'
  become: true
  become_user: '{{ rust_user }}'
  ansible.builtin.get_url:
    url: '{{ rust_analyzer_url }}'
    dest: /home/{{ rust_user }}/.local/bin
    mode: a+x

# Unarchive does not handle compressed gz files. So i need an another way to handle that.
# - name: install | Download Rust-analyzer '{{ rust_analyzer_version }}'
#   ansible.builtin.unarchive:
#     src: '{{ rust_analyzer_url }}'
#     dest: /tmp
#     remote_src: true
#     extra_opts:
#       - '-z'
#
# - name: install | Copy Rust-analyzer '{{ rust_analyzer_version }}' binary
#   ansible.builtin.copy:
#     src: /tmp/rust-analyzer
#     dest: /home/{{ ansible_user_id }}/.local/bin
#     mode: a+x
#     remote_src: true
...
