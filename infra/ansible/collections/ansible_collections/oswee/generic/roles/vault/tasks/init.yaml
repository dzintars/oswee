---
# tasks file for Vault

- name: init | Create unseal directories
  become: true
  ansible.builtin.file:
    path: '{{ vault_unseal_keys_path }}'
    state: directory
    owner: '{{ ansible_user_id }}'
    group: '{{ ansible_user_id }}'
    mode: '0755'
  delegate_to: workstation

- name: init | Create root key directories
  become: true
  ansible.builtin.file:
    path: '{{ vault_root_token_path }}'
    state: directory
    owner: '{{ ansible_user_id }}'
    group: '{{ ansible_user_id }}'
    mode: '0755'
  delegate_to: workstation


# - name: init | check for response
#   ansible.builtin.uri:
#     url: '{{ vault_url }}'
#     return_content: true
#     register: result
#     until: '"Hello World" in result.content'
#     retries: 10
#     delay: 1


# TODO: This should be a module
- name: init | Initialise Vault operator
  ansible.builtin.shell: vault operator init -key-shares=5 -key-threshold=3 -format json
  environment:
    VAULT_ADDR: '{{ vault_url }}'
  register: vault_init

- name: init | Parse output of vault init
  ansible.builtin.set_fact:
    vault_init_parsed: '{{ vault_init.stdout | from_json }}'

- name: init | Write unseal keys to files
  become: true
  no_log: true
  ansible.builtin.copy:
    dest: '{{ vault_unseal_keys_path }}/unseal_key_{{ item.0 }}'
    content: '{{ item.1 }}'
    owner: '{{ ansible_user_id }}'
    group: '{{ ansible_user_id }}'
    mode: '0644'
  with_indexed_items: '{{ vault_init_parsed.unseal_keys_hex }}'
  delegate_to: workstation

- name: init | Write root token to file
  become: true
  no_log: true
  ansible.builtin.copy:
    content: '{{ vault_init_parsed.root_token }}'
    dest: '{{ vault_root_token_path }}/rootkey'
    owner: '{{ ansible_user_id }}'
    group: '{{ ansible_user_id }}'
    mode: '0644'
  delegate_to: workstation
...
