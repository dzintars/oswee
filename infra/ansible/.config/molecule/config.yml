---
dependency:
  name: galaxy
  enabled: true
  # options:
  #   ignore-errors: true
  #   ignore-certs: true
  #   requirements-file: requirements.yaml
driver:
  name: vagrant
  provider:
    name: libvirt
    type: libvirt
    driver: kvm
lint: |
  set -e
  yamllint -f colored .
  ansible-lint --force-color .
provisioner:
  name: ansible
  inventory:
    links:
      # hosts: ../../environments/development/hosts
      group_vars: ../../environments/development/group_vars/
      host_vars: ../../environments/development/host_vars/
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
  config_options:
    defaults:
      vault_password_file: $HOME/.secrets/ansible/vault.oswee.key
      stdout_callback: yaml  # To get pretty output
      bin_ansible_callbacks: true
      interpreter_python: python3
      verbosity: 1
    ssh_connection:
      pipelining: true
      # ssh_args: -o ControlMaster=auto -o ControlPersist=600s
  options:
    vvv: true
    # vault-id: '@$HOME/.ansible/.vault.key'
  # ansible_args:
  #   - --inventory=myinventory.yaml
  connection_options:
    ansible_ssh_user: vagrant
    ansible_connection: smart  # Override the connection: local
    # ansible_ssh_common_args: -o IdentitiesOnly=no
  env:
    PY_COLORS: true
    ANSIBLE_COLLECTIONS_PATH: ./collections  # Because `dependency#options#requirements-file` has no any effect.
    ANSIBLE_ROLES_PATH: ./roles
    # ANSIBLE_FORCE_COLOR: true
    # ANSIBLE_DEBUG: true
    # ANSIBLE_CONFIG: './ansible.cfg'
  log: true
  lint: |
    set -e
    yamllint .
    ansible-lint
    flake8
verifier:
  name: ansible
  lint: |
    set -e
    ansible-lint
...
