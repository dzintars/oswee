load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/typescript:index.bzl", "ts_config")
load("//tools:ts_library.bzl", "ts_library")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "public",
    srcs = glob([
        "src/template.html",
        "src/assets/favicon.ico",
    ]),
)

# TODO: Whu this rule is deppendent on existance of root's //tsconfig.json??? Try to remove it and see how it fails.
ts_library(
    name = "example",
    srcs = glob(
        [
            "src/**/*.ts",
        ],
        exclude = ["webpack.dev.ts"],
    ),
    data = [
        ":tsconfig",
        "//apps/front/src/scss",
    ],
    deps = [
        "@npm//@types/node",
        "@npm//history",
        "@npm//lit-element",
        "@npm//lit-html",
        "@oswee//libs/elements/oswee/avatar",
        # "@oswee//libs/router",
    ],
)

# The "bundler" is thought of as an application, and has it's own deps.
# This effectively webpack + webpack.config.js.
ts_library(
    name = "config",
    srcs = ["webpack.dev.ts"],
    deps = [
        "@oswee//tools/webpack",
        "@npm//@types/html-webpack-plugin",
        "@npm//@types/node",
        "@npm//@types/webpack",
        "@npm//css-loader",
        "@npm//html-webpack-plugin",
        "@npm//style-loader",
        "@npm//umd-compat-loader",
        "@npm//webpack",
    ],
)

nodejs_binary(
    name = "devserver",
    data = [
        "src/assets/favicon.ico",
        ":config",
        ":example",
        ":public",
        "//tools/webpack",
    ],
    entry_point = "//tools/webpack:src/devserver.ts",
    tags = [
        "ibazel_notify_changes",
    ],
    templated_args = [
        "--output=./[hash].bundle.js",
        "--entry=oswee/apps/front/src/index",
        "--mode=development",
        "--config=oswee/apps/front/webpack.dev.js",
    ],
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.app.json",
    deps = [
        ":tsconfig.json",
        "//:tsconfig.base.json",
    ],
)
