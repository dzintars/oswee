"""
test
"""

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/typescript:index.bzl", "ts_config")
load("@npm//@bazel/concatjs:index.bzl", "ts_library")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "public",
    srcs = glob([
        "src/public/*",
    ]),
)

ts_library(
    name = "src",
    srcs = glob(
        [
            "src/**/*.ts",
        ],
        exclude = ["webpack.dev.ts"],
    ),
    data = [
        "//javascript/packages/prime/src/sass",
    ],
    devmode_module = "esnext",
    devmode_target = "esnext",
    module_name = "@oswee/platform/web/prime",
    module_root = "src",
    tsconfig = ":tsconfig",
    deps = [
        "//javascript/packages/components/ui-taskbar",
        "//javascript/modules/action",
        "//javascript/modules/connect",
        "//javascript/modules/shared/style",
        "//javascript/modules/elements/oswee/avatar",
        "//javascript/packages/weather",
        "//javascript/packages/websocket",
        "//javascript/packages/routing",
        "//javascript/packages/store",
        # "//platform/web/prime/src/sass:css_typings",
        # "@npm1//@types/node",
        # "@npm1//history",
        "@npm//lit",
        "@npm//redux",
        "@npm//redux-saga",
        "@npm//redux-thunk",
        "@npm//redux-dynamic-modules-core",
        "@npm//redux-dynamic-modules-saga",
        "@npm//redux-dynamic-modules-thunk",
        "@npm//immer",
        "@npm//tslib",
    ],
)

filegroup(
    name = "prime.js",
    srcs = [":src"],
    output_group = "es5_sources",
)

# The "bundler" is thought of as an application, and has it's own deps.
# This effectively webpack + webpack.config.js.
ts_library(
    name = "config",
    srcs = ["webpack.dev.ts"],
    tsconfig = ":tsconfig",
    deps = [
        "//tools/webpack",
        "@npm//@types/html-webpack-plugin",
        "@npm//@types/node",
        "@npm//@types/webpack",
        "@npm//css-loader",
        "@npm//html-webpack-plugin",
        "@npm//style-loader",
        "@npm//umd-compat-loader",
        "@npm//webpack",
    ],
)

nodejs_binary(
    name = "devserver",
    data = [
        "src/public/favicon.ico",
        ":config",
        ":public",
        ":src",
        "//tools/webpack",
    ],
    entry_point = "//tools/webpack:src/devserver.ts",
    tags = [
        "ibazel_notify_changes",
    ],
    templated_args = [
        # "--output=./[hash].bundle.js",
        "--output=./bundle.js",
        "--entry=./javascript/packages/prime/src/index",
        "--mode=development",
        "--config=oswee/javascript/packages/prime/webpack.dev.js",
    ],
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.app.json",
    deps = [
        "tsconfig.json",
        "//javascript:tsconfig.base.json",
    ],
)
